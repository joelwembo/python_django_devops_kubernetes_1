version: "3.9"
services:
  web:
    image: joelwembo/prodxcloud-django-web:latest
    container_name: prodxcloud-django-web
    env_file: .env
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=multitenantsaas.settings
      - DJANGO_LOG_LEVEL=DEBUG
      - ENV=local
    command:
      - /bin/sh
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py collectstatic --noinput
        # python manage.py runserver 0.0.0.0:8585   
        gunicorn --bind 0.0.0.0:8585 multitenantsaas.wsgi:application
    ports:
      - "8585:8585"
    networks:
      - web_network
    volumes:
       - appdata:/app
    extra_hosts:
        - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy     
  db:
    restart: always
    image: postgres:15.1-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env 
    environment:
      - POSTGRES_DB=DB3
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    expose:
       - "5432"
    ports:
       - "5432:5432"
    networks:
       - data_network 
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5     
  pgadmin:
        restart: always
        image: dpage/pgadmin4
        container_name: prodxcloud-pgadmin 
        depends_on:
          - db
        ports:
          - "5051:80"
        environment:
          PGADMIN_DEFAULT_EMAIL: joelwembo@outlook.com
          PGADMIN_DEFAULT_PASSWORD: postgres   
          PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
          PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'


  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    networks:
      - web_network        

networks:
  data_network:
    driver: bridge
  web_network:
    driver: bridge
volumes:
  postgres_data:
  appdata:
   driver: local
